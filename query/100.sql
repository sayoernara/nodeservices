{
    "auth":{
        "searchUsername" : "SELECT a.* FROM akun as a INNER JOIN akun_has_role as b ON a.id_akun = b.id_akun WHERE a.username = ? AND b.id_role = ?",
        "userInfo" : "SELECT a.nama, a.username, c.role, CASE WHEN b.id_role = 3 THEN d.id_titik ELSE '' END as id_loc, CASE WHEN b.id_role = 3 THEN UPPER(e.nama_titik) ELSE '' END as location FROM akun as a INNER JOIN akun_has_role as b ON a.id_akun = b.id_akun INNER JOIN role as c ON b.id_role = c.id_role LEFT OUTER JOIN kasir as d ON a.id_akun = d.id_akun LEFT OUTER JOIN titik as e ON d.id_titik = e.id_titik WHERE a.id_akun = ?"
    },
    "goods":{
        "goodsList" : "SELECT a.id_item, a.item as comodity, b.harga_jual as basic_price, d.berat as weight_Gr, CASE WHEN d.berat = '100' THEN 'Ons' WHEN d.berat = '250' THEN '1/4' WHEN d.berat = '500' THEN '1/2' WHEN d.berat = '1000' THEN 'Kg' END as weight_txt, c.harga_per_gram as price_per_Gr, unsplash_img as img FROM item as a LEFT OUTER JOIN harga as b ON a.id_item = b.id_item LEFT OUTER JOIN harga_per_gram as c ON b.id_harga = c.id_harga LEFT OUTER JOIN berat as d ON c.id_berat = d.id_berat WHERE d.berat in ('100','250', '500', '1000') AND c.tanggal = (SELECT MAX(c2.tanggal) FROM harga_per_gram AS c2 JOIN harga AS b2 ON c2.id_harga = b2.id_harga WHERE b2.id_item = a.id_item AND c2.id_berat = d.id_berat) ORDER BY a.item ASC",
        "goodsPricePerGram" : "SELECT a.id_item, a.item as comodity, d.berat as weight_Gr, c.harga_per_gram as price_per_Gr FROM item as a LEFT OUTER JOIN harga as b ON a.id_item = b.id_item LEFT OUTER JOIN harga_per_gram as c ON b.id_harga = c.id_harga LEFT OUTER JOIN berat as d ON c.id_berat = d.id_berat WHERE a.id_item = ? AND c.tanggal = (SELECT MAX(c2.tanggal) FROM harga_per_gram AS c2 JOIN harga AS b2 ON c2.id_harga = b2.id_harga WHERE b2.id_item = a.id_item AND c2.id_berat = d.id_berat) ORDER BY a.item ASC",
        "getPriceByItem" : "SELECT c.tanggal, d.berat, c.harga_per_gram AS harga, c.id_harga_per_gram as id_ppg FROM harga h JOIN harga_per_gram c ON h.id_harga = c.id_harga JOIN berat d ON c.id_berat = d.id_berat WHERE h.id_item = ? AND d.berat <= 1000 AND c.tanggal = (SELECT MAX(c2.tanggal) FROM harga_per_gram c2 JOIN harga h2 ON c2.id_harga = h2.id_harga WHERE h2.id_item = h.id_item AND c2.id_berat = d.id_berat) ORDER BY d.berat DESC"
    },
    "transaction":{
        "searchMember" : "SELECT COUNT(*) AS total FROM langganan WHERE telepon = ?",
        "insertMemberByTransaction" : "INSERT INTO langganan (nama, telepon, tgl_daftar) VALUES (?, ?, NOW())",
        "getVoucherByPhone" : "SELECT b.id_voucher, b.kode_voucher, b.nominal FROM langganan AS a INNER JOIN voucher AS b ON a.id_langganan = b.id_langganan AND b.masa_berlaku >= CURDATE() AND b.status = 'aktif' WHERE a.telepon = ? ORDER BY b.masa_berlaku ASC LIMIT 1",
        "genSellNumber" : "SELECT CONCAT('TRX_', DATE_FORMAT(UTC_TIMESTAMP(), '%Y%m%d%H%i%s'), '_', SUBSTRING(MD5(RAND()), 1, 5)) AS trx_no",
        "genExcNumber" : "SELECT CONCAT('EXC_', DATE_FORMAT(UTC_TIMESTAMP(), '%Y%m%d%H%i%s'), '_', SUBSTRING(MD5(RAND()), 1, 5)) AS trx_no",
        "insertReturSellMaster" : "INSERT INTO sayoerna_100_titik.transaksi (id_transaksi, tanggal, id_kasir, id_titik, nominal, modal, keuntungan, total_diskon_manual, pembayaran, kembalian) VALUES ( ? , NOW() , ?, ?, ?, ?, ?, ?, ?, ?)",
        "insertSellMaster" : "INSERT INTO sayoerna_100_titik.transaksi (id_transaksi, tanggal, id_kasir, id_titik, id_voucher, nominal, telepon, modal, keuntungan, total_diskon_manual, pembayaran, kembalian) VALUES ( ? , NOW() , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
        "insertSellDetail" : "INSERT INTO sayoerna_100_titik.transaksi_item (id_transaksi, id_harga_per_gram, id_item, tipe_transaksi, subtotal_berat, subtotal_harga, total_harga, id_voucher, id_detail_referensi, level_diskon_manual, nilai_diskon_manual) VALUES (?, ?, ?, ?, ?, ?, ?, 0, NULL, 0, ?)",
        "getModal" : "SELECT SUM(h.harga_beli) as modal FROM harga h INNER JOIN (SELECT id_item, MAX(tanggal) AS max_tgl FROM harga WHERE id_item = ? GROUP BY id_item) t ON h.id_item = t.id_item AND h.tanggal = t.max_tgl",
        "transactionByCashier" : "SELECT a.id_transaksi AS nomor, a.tanggal, COALESCE(UPPER(e.nama), UPPER(f.nama)) AS cashier, UPPER(c.nama_titik) AS store, d.item AS item_nm, b.tipe_transaksi AS type, FORMAT(SUM(b.subtotal_berat) / 1000, 3) + 0 AS weight_kg, SUM(b.subtotal_harga) AS grossprice, SUM(b.nilai_diskon_manual) AS discount, SUM((b.total_harga - b.nilai_diskon_manual) - COALESCE(g.nominal,0) / NULLIF(t.jml_item,0)) AS nettprice, COALESCE(g.nominal,0) / NULLIF(t.jml_item,0) AS disc_voucher FROM transaksi AS a LEFT JOIN transaksi_item AS b ON a.id_transaksi = b.id_transaksi LEFT JOIN titik AS c ON a.id_titik = c.id_titik LEFT JOIN item AS d ON b.id_item = d.id_item LEFT JOIN akun AS e ON a.id_kasir = e.id_akun LEFT JOIN (SELECT k.id_kasir, ak.nama FROM kasir k LEFT JOIN akun ak ON k.id_akun = ak.id_akun) AS f ON a.id_kasir = f.id_kasir LEFT JOIN voucher AS g ON a.id_voucher = g.id_voucher LEFT JOIN (SELECT id_transaksi, COUNT(*) AS jml_item FROM transaksi_item GROUP BY id_transaksi) AS t ON a.id_transaksi = t.id_transaksi WHERE a.tanggal BETWEEN ? AND ? AND f.nama = ? OR e.nama = ? GROUP BY a.id_transaksi, a.tanggal, e.nama, f.nama, c.nama_titik, d.item ORDER BY a.tanggal DESC",
        "burnVoucher" : "UPDATE voucher SET status = 'hangus' WHERE id_voucher = ?"
    }
}